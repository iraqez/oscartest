#######################################################
# 
# DataSerializerJSONRPC2.py
# Python implementation of the Class DataSerializerJSONRPC2
# Generated by Enterprise Architect
# Created on:      17-���-2015 16:23:02
# Original author: user
# 
#######################################################
from NovaPoshta.Models.DataContainer import DataContainer
from NovaPoshta.Core.Serializer.SerializerInterface import SerializerInterface
import json as jsonSerializer
from NovaPoshta.Core.Serializer.SerializerBatchInterface import SerializerBatchInterface
from NovaPoshta.Models.DataContainerResponse import DataContainerResponse


class DataSerializerJSONRPC2(SerializerInterface, SerializerBatchInterface):

    def serializeData(self, data):
        dataJSONRPC2 = self.__dataContainer2dataSerializerJSONRPC2([data])

        json = jsonSerializer.dumps(dataJSONRPC2[0], default=lambda o: o.__dict__).encode('utf8')

        return json

    def unserializeData(self, json):
        data = jsonSerializer.loads(json)

        dataContainer = self.__dataSerializerJSONRPC2dataContainer([data])

        return dataContainer[0]

    def serializeBatchData(self, data):
        pass

    def unserializeBatchData(self, json):
        pass

    def __dataContainer2dataSerializerJSONRPC2(self, dataItems):
        data = []

        for item in dataItems:
            dataJSONRPC2 = {}
            dataJSONRPC2['id'] = item.id
            dataJSONRPC2['method'] = item.modelName + '.' + item.calledMethod
            dataJSONRPC2['params'] = {}
            dataJSONRPC2['params']['methodProperties'] = item.methodProperties
            dataJSONRPC2['params']['language'] = item.language
            dataJSONRPC2['params']['apiKey'] = item.apiKey

            data.append(dataJSONRPC2)

        return data

    def __dataSerializerJSONRPC2dataContainer(self, dataItems):
        dataContainers = []
        for data in dataItems:
            # if (json_last_error() != JSON_ERROR_NONE) {
            #     dataContainerResponse = new DataContainerResponse()
            #     dataContainerResponse.success = false
            #     dataContainerResponse.errors[] = array('DataSerializerJSONRPC2.DATA_IS_INVALID')
            #
            #     return dataContainerResponse
            # }

            dataContainer = DataContainerResponse()
            dataContainer.success = True
            # dataContainer.success = isset(data.result) ? true : false
            if dataContainer.success:
                dataContainer.data = data['result']
            else:
                if data.error.data:
                    dataContainer.errors = data.error.data
                else:
                    dataContainer.errors = data.error.message

            dataContainer.warnings = data['warnings']
            dataContainer.info = data['info']
            dataContainer.id = data['id']

            dataContainers.append(dataContainer)

        return dataContainers